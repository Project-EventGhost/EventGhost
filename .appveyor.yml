# In AppVeyor's web config add an enviremont variable named GITHUB_TOKEN.
# Set it to a token you've created on GitHub.
# To draft a release on GitHub with AppVeyor, create a tag on master.

version: '{build}-{branch}'

matrix:
  fast_finish: true

environment:
  PYTHON: 'C:\Stackless27'
  PYTHONPATH: 'C:\Stackless27;C:\Stackless27\Scripts;C:\Stackless27\DLLs;C:\Stackless27\Lib;C:\Stackless27\Lib\site-packages;'
  Py_DEBUG: "False"

#cache:
#  - '%PYTHON%'

install:
  # - ps: Start-FileDownload "https://github.com/appveyor/ci/raw/master/scripts/enable-rdp.ps1" -Timeout 60000
  # - enable-rdp.ps1

  # HTML Help Workshop 1.32
  # - cinst html-help-workshop

  # Microsoft Visual C++ Redistributable 2008 (version min: 9.0.21022.8)
  # - cinst vcredist2008

  # --------------Downloads and Installs--------------

  - ps: |
      $Env:PATH = $Env:PATH -replace "Python27", "Stackless27"
      $PythonFolder = $Env:PYTHON
      $PythonScripts = $PythonFolder + "\Scripts"
      $SitePackages = $PythonFolder + "\lib\site-packages"
      $SysWOW = $Env:SYSTEMROOT + "\SysWOW64"
      $PythonWindowsDLL = $SysWOW + "\python27.dll"
      $PythonDLL = $PythonFolder + "\python27.dll"
      $InstallersFolder = $Env:APPVEYOR_BUILD_FOLDER + "\_build\installers\"

      Remove-Item $PythonWindowsDLL
      " "
      " "

      If (-not (Test-Path $PythonFolder)) {
        New-Item $InstallersFolder -type directory | Out-Null

        " "
        "------ Installing Stackless 2.7.12150 x86 ------"
        " "
        $StacklessInstaller = $InstallersFolder + "python-2.7.12150-stackless.msi"
        $StacklessInstallDir = "TARGETDIR=" + $PythonFolder
        $StacklessURL = "http://www.stackless.com/binaries/python-2.7.12150-stackless.msi"
        Start-FileDownload $StacklessURL -Timeout 60000 -FileName $StacklessInstaller
        Start-Process "MsiExec.exe" -arg "/I $StacklessInstaller /quiet /passive /qn /norestart $StacklessInstallDir" -Wait
        "DONE!"

        " "
        "---------------- Upgrading PIP ----------------"
        " "
        Start-Process "python" -arg "-m pip install --upgrade pip" -Wait
        pip install -U setuptools
        "DONE!"

        " "
        "--------- Installing  wxPython 3.0.2.0 ---------"
        " "
        #$WXInstaller = $InstallersFolder + "wxPython3.0-win32-3.0.2.0-py27.exe"
        #$WXURL = "http://downloads.sourceforge.net/wxpython/wxPython3.0-win32-3.0.2.0-py27.exe"
        #Start-FileDownload $WXURL -Timeout 60000 -FileName $WXInstaller
        #Start-Process $WXInstaller -arg "/VERYSILENT /SUPPRESSMSGBOXES" -Wait
        "DONE!"

        " "
        "-------------- Installing Modules --------------"
        " "

        pip install -q "wheel"
        pip install -q "sphinx==1.4.9"
        pip install -q "commonmark==0.7.3"
        pip install -q "pillow==3.4.2"
        pip install -q "py2exe_py2==0.6.9"
        pip install -q "pycrypto==2.6.1"
        pip install -q "https://github.com/enthought/comtypes/archive/1.1.3.zip"
        pip install -q "svn+http://svn.python.org/projects/ctypes/trunk/ctypeslib/#ctypeslib=0.5.6"
        #$ErrorActionPreference = "SilentlyContinue"
        #& "easy_install" "--always-unzip" "pycrypto"
        #& "easy_install" "--always-unzip" "comtypes"

        " "
        "------------ Installing  pywin32 220 -----------"
        " "
        #pip install --egg "https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/pywin32-220.zip/download"
        $PyWinInstaller = $InstallersFolder + "pywin32-220.win32-py2.7.exe"
        #$PyWinWheel = $InstallersFolder + "pywin32-220-cp27-none-win32.whl"
        $PyWinURL = "https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/pywin32-220.win32-py2.7.exe/download"
        Start-FileDownload $PyWinURL -Timeout 60000 -FileName $PyWinInstaller

        cd $InstallersFolder
        7z x "pywin32-220.win32-py2.7.exe" -opywin32
        cd pywin32
        dir
        "--------------------------------------"
        dir $SitePackages
        "--------------------------------------"
        dir $PythonScripts
        "--------------------------------------"
        Copy-Item -Path ".\PLATLIB" -Destination $SitePackages -recurse
        Copy-Item -Path ".\SCRIPTS" -Destination $PythonScripts -recurse
        "--------------------------------------"
        dir
        "--------------------------------------"
        dir $SitePackages
        "--------------------------------------"
        dir $PythonScripts
        "--------------------------------------"
        #$OldErrorActionPreference = $ErrorActionPreference
        #$ErrorActionPreference = "SilentlyContinue"
        #& "wheel" "convert" $PyWinInstaller
        #$ErrorActionPreference = "Continue"
        #& "pip" "install" $PyWinWheel
        cd $Env:APPVEYOR_BUILD_FOLDER
        "DONE!"

      }

      #Copy-Item $PythonDLL $SysWOW

      " "
      "----- Running PyWin32  Post Install Script -----"
      " "
      $PywinPostInstall = $PythonScripts +"\pywin32_postinstall.py"
      & "python" $PywinPostInstall "-install" "-silent" "-quiet"
      "DONE!"

      " "
      "------------ Installing  Inno Setup ------------"
      " "
      $InnoInstaller = $InstallersFolder + "innosetup-5.5.9-unicode.exe"
      $InnoURL = "http://files.jrsoftware.org/is/5/innosetup-5.5.9-unicode.exe"
      Start-FileDownload $InnoURL -Timeout 60000 -FileName $InnoInstaller
      Start-Process $InnoInstaller -arg "/SP /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /RESTARTAPPLICATIONS /NOICONS" -Wait
      "DONE!"

      " "
      "--------------- Running Build.Py ---------------"

build: off

after_test:
  #- cmd: python.exe _build\\Build.py --build --package
  #- cmd: dir _build\output\*Setup.exe /B > _build\output\setup-exe.txt
  #- cmd: set /P setup-exe= < _build\output\setup-exe.txt
  # - START /WAIT %setup-exe% /VERYSILENT /SUPPRESSMSGBOXES /NOCLOSEAPPLICATIONS
  - cmd: echo "DONE!"

#artifacts:
#  - path: _build\output\$(setup-exe)
#  - path: _build\output\CHANGELOG_THIS_RELEASE.bb
#  - path: _build\output\CHANGELOG_THIS_RELEASE.md

#before_deploy:
#  - cmd: python -c "fh=open('_build\\output\\CHANGELOG.md'); txt=fh.read().replace('\n','\\n'); print txt[txt.find('**'):]" > tmp
#  - cmd: set /P CHANGELOG=< tmp

deploy:
    # Deploy to GitHub Releases
  - provider: GitHub
    auth_token: $(GITHUB_TOKEN)
    draft: true
    prerelease: true
    artifact: _build\output\$(setup-exe)
    force_update: true
    # tag: EventGhost_0.5.0-beta6
    # release: EventGhost_0.5.0-beta6
    # description: $(CHANGELOG)
    description: 'Put the contents of [CHANGELOG_THIS_RELEASE.md](https://ci.appveyor.com/api/buildjobs/$(APPVEYOR_JOB_ID)/artifacts/_build%2Foutput%2FCHANGELOG_THIS_RELEASE.md) here instead of this text.'
    on:
      #branch: master          # release from master branch only
      appveyor_repo_tag: true # deploy on tag push only
